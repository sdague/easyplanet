<?php
// $Id$

/**
 * Implementation of hook_perm
 */
function udplanet_perm() {
  return array('administer udplanet', 'administer own feeds', 'view udplanet');
}

/**
 * Implementation of hook_help
 */
function udplanet_help($path, $arg) {
  switch ($path) {
    case 'admin/help/udplanet':
      $output = '';
      return $output;
  }
}

/**
 * Implementation of hook_menu
 */
function udplanet_menu() {
  $items = array();

  $items['admin/settings/udplanet'] = array(
    'title' => t('UD Planet Settings'),
    'description' => t('Set the various options for the UD Planet module.'),
    'weight' => '0',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('udplanet_admin_settings'),
    'access arguments' => array('administer udplanet'),
    'file' => 'udplanet_settings.inc',
    'type' => MENU_NORMAL_ITEM,
   );

  $items['admin/settings/udplanet/settings'] = array(
    'title' => t('Settings'),
    'description' => t('Set the various options for the Ubuntu Release Countdown module.'),
    'weight' => '0',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('udplanet_admin_settings'),
    'access arguments' => array('administer udplanet'),
    'file' => 'udplanet_settings.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
   );

  $items['admin/settings/udplanet/feeds'] = array(
    'title' => t('User Feeds'),
    'description' => t('Set the various options for the Ubuntu Release Countdown module.'),
    'weight' => '1',
    'page callback' => 'udplanet_feeds_admin',
    'page arguments' => array(),
    'access arguments' => array('administer udplanet'),
    'file' => 'udplanet_feeds_admin.inc',
    'type' => MENU_LOCAL_TASK,
   );
  $items['user/%/udplanet/feeds'] = array(
    'title' => t('Planet Feeds'),
    'page callback' => 'udplanet_feeds_user',
    'page arguments' => array(1),
    'access arguments' => array('administer own feeds'),
    'file' => 'udplanet_feeds_user.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['planet'] = array(
    'title' => NULL,
    'page callback' => 'udplanet_page_content',
    'access arguments' => array('view udplanet'),
    'file' => 'udplanet_content.inc',
    'type' => MENU_CALLBACK
  );

  return $items;
}

function udplanet_check_dupes($feed_url, $feed_title, $fid) {
  $dupe = array(
    'detected' => FALSE,
    'title' => FALSE,
    'url' => FALSE,
  );

  $feeds = db_query('SELECT fid, title, url FROM {aggregator_feed}');
  while ($feed = db_fetch_object($feeds)) {
    if ($feed->fid != $fid) {
      if ($feed->title == $feed_title) {
        $dupe['detected'] = TRUE;
        $dupe['title'] = TRUE;
      }
      if ($feed->url == $feed_url) {
        $dupe['detected'] = TRUE;
        $dupe['url'] = TRUE;
      }
    }
  }

  if ($dupe['detected']) {
    form_set_error('udplanet_error', t('Duplicate entry detected.'));

    if ($dupe['title']) {
      form_set_error('udplanet_title', t('The title ' . $feed_title . ' is already being used.'));
    }
    if ($dupe['url']) {
      form_set_error('udplanet_url', t('The URL ' . $feed_url . ' is already being used.'));
    }
  }

  return $dupe['detected'];
}

/**
 * Function to limit number of added feeds
 */
function udplanet_check_limit($uid, $op) {
  $feed_limit = variable_get('udplanet_user_max', 0);

  // If this is 0 or less, they can add any number of feeds
  if ($feed_limit <= 0) {
    return TRUE;
  }

  $feed_count = db_result(db_query('SELECT COUNT(*) FROM {udplanet_feeds} WHERE uid="%s"', $uid));

  // If the user is under their limit they can add
  if ($op == 'Add') {
    if ($feed_count < $feed_limit) {
      $commit = TRUE;
    }
  }

  // If the user is not over their limit they can update
  if ($op == 'Update') {
    if ($feed_count <= $feed_limit) {
      $commit = TRUE;
    }
  }

  if ($commit) {
    return TRUE;
  } else {
    form_set_error('udplanet_limit', t('Failed ' . $op . ': Feed Limit! &nbsp;&nbsp;&nbsp; User has ' . $feed_count . ' feed(s). User is allowed ' . $feed_limit . ' feed(s).'));
    return FALSE;
  }
}
